{"name":"Database dictionary build","tagline":"build database dictionary 快速创建数据库字典","body":"# database dictionary build 快速创建数据库字典\r\n\r\n### Demo\r\n\r\n[Demo](http://db.theone.io)\r\n\r\n\r\n### What Can I do ?\r\n\r\n1. 我们只需要一款浏览器 (没错!我说的是 __浏览器__ 不是ie! ^.^ )\r\n2. 支持语言 node.js / php\r\n3. 支持数据库 MySQL\r\n4. 如果需要团队共同维护一个项目管理的数据字典\r\n5. 碰巧你和我一样,都厌恶了 Word\r\n6. 如果你更喜欢 用URL 展示你的demo\r\n7. 更快,生成`.json`数据,而不是去执行查看命令\r\n\r\n给我一个浏览器,一个运行脚本环境,还你一个简洁清晰的数据字典\r\n\r\n#### 组成结构\r\n\r\n1. Angular.js 主要负责路由 和 过滤,以及页面的渲染\r\n2. Bootstrap 页面css\r\n3. `.json` 所有数据存储,最后都以一个 `.json`文件的形式\r\n\r\n#### 初衷\r\n\r\n项目调整阶段时,数据库变动较为频繁, 碰巧新人加入而表缺少注释, 且一个库多达 100多个表,致使新人熟悉数据机构接口更加困难.  \r\nexcel 面向普通用户的, 作为程序员就应该用程序员的方式.  \r\nAnyway 最终我的方案是 php/node == build ==> `.json` 文件,再有 ng 加载出来.  \r\n从而大家只要在 目标数据库上加 __注释__,或者修改结构数据. 再执行生成脚本 就可以更新 `.json`文件.  \r\n\r\n\r\n#### 原型\r\n\r\n从数据库中获取建表语句  \r\n\r\n生成 相应的json 文件  \r\n\r\n\r\n\r\n#### 产品规划\r\n\r\n1. 后台生成\r\n2. 前台view\r\n3. 引导页\r\n\r\n\r\n\r\n### How to use ?\r\n\r\n1. 配置 `server/config.json` 数据库信息\r\n2. 执行 `node`/`php` 脚本  \r\n3. 访问 `相应目录`\r\n4. 支持模糊搜索\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}